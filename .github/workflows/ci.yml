name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        deno: [1.0.2, 1.0.1, 1.0.0]
    name: Deno ${{ matrix.deno }} sample
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: ${{ matrix.deno }}  
      - name: Running test
        run: deno test

  build:
    runs-on: ubuntu-16.04
    name: Build sample app on 1.0.2
    env:
      artifact_name: sample-${{ github.run_id }}-${{ github.sha }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: 1.0.2
      - run: deno test
      - name: Copy index.ts and Dockerfile
        run: |
          mkdir -p ${{ github.workspace }}/artifact/ \
          && cp ${{ github.workspace }}/index.ts ${{ github.workspace }}/artifact/ \
          && cp ${{ github.workspace }}/hello.ts  ${{ github.workspace }}/artifact/ \
          && cp ${{ github.workspace }}/Dockerfile ${{ github.workspace }}/artifact/ \
      - name: Publishing app artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.artifact_name }}
          path: ${{ github.workspace }}/artifact/**/*
      
  publish:
      runs-on: ubuntu-latest
      needs: [test, build]
      name: Publish sample container image
      env:
        artifact_name: sample-${{ github.run_id }}-${{ github.sha }}
      steps:
        - name: Download artifact
          uses: actions/download-artifact@v2
          with:
            name: ${{ env.artifact_name }}
            path: ${{ github.workspace }}
        - name: Publish container image in GCR
          uses: docker/build-push-action@v1
          with:
            username: _json_key
            password: ${{ secrets.GCP_GCR_JSON_KEY_FILE }}
            registry: gcr.io
            repository: ${{ secrets.GCP_PROJECT_ID }}/sample
            tags: ${{ github.run_id }}-${{ github.sha }}
            
  deploy:
    runs-on: ubuntu-latest
    needs: [publish]
    name: Deploy sample to Cloud Run
    steps:
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          service_account_key: ${{ secrets.GCP_GCR_JSON_KEY_FILE }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          
      - run: |-
          gcloud run deploy sample \
            --quiet \
            --image "gcr.io/${{ secrets.GCP_PROJECT_ID }}/sample:${{ github.run_id }}-${{ github.sha }}" \
            --platform "managed" \
            --region "us-central1" \
            --allow-unauthenticated
